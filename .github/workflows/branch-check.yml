name: Branch Up-to-date Check

on:
  pull_request:
    branches: [ development ]
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  branch-check:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.5.0

      - name: Check branch
        run: |
          git fetch
          if [ "$(git rev-parse HEAD)" = "$(git rev-parse @{u})" ]; then
            echo "Branch is up to date"
          else
            echo "Branch is not up to date"
            exit 1
          fi

      - name: Set status
        uses: actions/github-script@v4
        with:
          github-token: ${{ env.GITHUB_TOKEN }}
          script: |
            const { data: checks } = await octokit.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha
            });
            const latestCheck = checks.check_runs[0];
            const latestStatus = latestCheck.conclusion;
            const conclusion = latestStatus === 'success' ? 'success' : 'failure';
            const message = latestStatus === 'success' ? 'Branch is up to date' : 'Branch is not up to date';
            const { data: status } = await octokit.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: conclusion,
              description: message,
              context: 'branch-up-to-date'
            });
